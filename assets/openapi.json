{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Config",
    "description": "Configuration file for configuring repositories when authoring charts\n that are pushed into [charted-server].\n\n ## Example\n ```toml\n [global]\n # semver constraint of what version `charted-helm-plugin` to require.\n plugin = \">= 0.1\"\n\n # semver constraint of what version of `helm` to require.\n helm   = \">= 3.12\"\n\n [repository.\"noelware/my-chart\"]\n source = \"./charts/my-chart\"\n ```\n\n To view the properties of **my-chart**, you can use the **repository view**\n subcommand:\n\n ```shell\n $ helm charted repository view my-chart\n Chart `my-chart`:\n     -> Registry:                    default (https://charts.noelware.org/api/v1)\n     -> Source:                      /git/Noelware/helm-charts/charts/my-chart\n     -> Version (from `Chart.yaml`): 0.1.0\n ```\n\n [charted-server]: https://charts.noelware.org",
    "type": "object",
    "properties": {
        "global": {
            "description": "Global configuration that affects the lifecycle of the plugin.",
            "$ref": "#/$defs/Global",
            "default": {
                "helm_constraint": ">=3.12",
                "plugin_constraint": ">=0.1.0"
            }
        },
        "registry": {
            "description": "A set of registries that are avaliable to each repository.",
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Registry"
            }
        },
        "repository": {
            "description": "A set of repositories determined by a **path**, which is `{{owner}}/{{repo}}`.",
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Repository"
            }
        }
    },
    "$defs": {
        "Global": {
            "description": "Global configuration that applies for all operations.",
            "type": "object",
            "properties": {
                "helm_constraint": {
                    "description": "A SemVer version requirement constraint of what version of Helm is supported.\n\n **charted-helm-plugin** uses the [`semver`] crate to parse version\n requirements, which abides how [Cargo parses and evaluates semantic versioning].\n\n [Cargo parses and evaluates semantic versioning]: https://doc.rust-lang.org/cargo/reference/semver.html\n [`semver`]: https://crates.io/crates/semver",
                    "$ref": "#/$defs/VersionReq",
                    "default": ">=3.12"
                },
                "plugin_constraint": {
                    "description": "A SemVer version requirement constraint of what version of **charted-helm-plugin**\n to use for Helm operations.\n\n **charted-helm-plugin** uses the [`semver`] crate to parse version\n requirements, which abides how [Cargo parses and evaluates semantic versioning].\n\n [Cargo parses and evaluates semantic versioning]: https://doc.rust-lang.org/cargo/reference/semver.html\n [`semver`]: https://crates.io/crates/semver",
                    "$ref": "#/$defs/VersionReq",
                    "default": ">=0.1.0"
                }
            }
        },
        "Publish": {
            "description": "Configuration for the\n [`repository.<name>.publish`](Repository.html#structfield.publish) setting.",
            "anyOf": [
                {
                    "description": "A simple toggle.\n\n - **true**: The repository can be published to any registry.\n - **false**: Repository cannot be published to any registry.",
                    "type": "boolean"
                },
                {
                    "description": "A list of registry names that is allowed to push this repository.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            ]
        },
        "Registry": {
            "description": "The `[registry.<name>]` table allows to configure all the avaliable registries.",
            "type": "object",
            "properties": {
                "url": {
                    "description": "URL of the registry to point to. This doesn't include the API version\n in the URI itself (i.e, `https://charts.noelware.org/api/v1`).",
                    "type": "string",
                    "format": "uri"
                },
                "version": {
                    "description": "API version of the registry.",
                    "$ref": "#/$defs/Version",
                    "default": 1
                }
            },
            "required": ["url"]
        },
        "Repository": {
            "description": "Register a repository that the Helm plugin can discover and allow operations on.",
            "type": "object",
            "properties": {
                "publish": {
                    "description": "Indication if this repository can be published to registries.",
                    "$ref": "#/$defs/Publish"
                },
                "readme": {
                    "description": "Location to a **README** file. Defaults to\n <code>[`repository.<name>.source`](#structfield.source)/README.md</code>",
                    "type": ["string", "null"]
                },
                "source": {
                    "description": "Source location to where the repository lives in.",
                    "type": "string"
                }
            },
            "required": ["source"]
        },
        "Version": {
            "type": "number",
            "enum": [1]
        },
        "VersionReq": {
            "type": "string"
        }
    }
}
